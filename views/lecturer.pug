extends layout

block content
    header
        .top-bar
            h1 Live-Feedback
            h3 Aktuelle Stimmen:
                b  ...
        //img.logoTop(src="/img/hs_logo.png", alt='Logo der Hochschule Flensburg')        
        .round-button.chartToggle(type='button' onclick='toggleChart();')
            img(src='/img/analytics.svg' alt='Icon of a pie- and bar-chart')
    div(style='padding: 1% 2%; margin: 2% 5%; background-color: aliceblue; border-radius: 10px; margin-top: 150px;')
        canvas#auditResults
    script.
        var ctx = document.getElementById("auditResults").getContext('2d');

        var chartType = 'pie';

        var dataObject = {
            labels: ['\ue803 Kein Interesse', "\ue804 Zu schnell", "\ue805 Zu langsam", "\ue806 Verständnisprobleme", "\ue807 Verstanden"],
            datasets: [{
                label: 'Gefühlszustände',
                data: [0, 0, 0, 0, 0],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(34, 158, 34, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(34, 158, 34, 1)'
                ],
                borderWidth: 1
            }]
        }

        var chart = new Chart(ctx, {
            type: chartType,
            data: dataObject,
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            fontFamily: 'fontello'
                        }
                    }]
                }
            }
        });

        Chart.defaults.global.defaultFontFamily = "fontello";
        $.get(window.location.pathname + '/getData', function(data) {
            dataObject.datasets[0].data = data;
            chart.config.data = dataObject;
            var sum = data.reduce((a, b) => Number(a) + Number(b), 0);
            $('h3 b').text(' ' + Number(sum).toFixed(2));
            chart.update(0);
        });
    
        setInterval(function(){
            console.log('Updating chart!');
            $.get(window.location.pathname + '/getData', function(data) {
                console.log(data);
                dataObject.datasets[0].data = data;
                chart.config.data = dataObject;
                var sum = data.reduce((a, b) => Number(a) + Number(b), 0);
                $('h3 b').text(' ' + Number(sum).toFixed(2));
                chart.update(0);
            });
        }, 1000);

        function toggleChart() {
            this.chart.destroy();
            this.chartType = (this.chartType == 'bar') ? 'pie' : 'bar';

            if(this.chartType == 'bar'){
                this.chart = new Chart(ctx, {
                    type: chartType,
                    data: dataObject,
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true,
                                    fontFamily: 'fontello'
                                }
                            }]
                        },
                        legend: {
                            display: false
                        },
                        tooltips: {
                            callbacks: {
                                label: function(tooltipItem) {
                                        return tooltipItem.yLabel;
                                }
                            }
                        }
                    }
                });
            } else if (this.chartType == 'pie'){
                this.chart = new Chart(ctx, {
                    type: chartType,
                    data: dataObject,
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true,
                                    fontFamily: 'fontello'
                                }
                            }]
                        },
                        legend: {
                            display: true
                        }
                    }
                });
            }
        }